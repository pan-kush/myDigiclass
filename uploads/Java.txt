import java.util.*; //Scanner,Arrays
import javafx.util.Pair;

public class practice{
	// static int fib(int x){
	// 	if (x==1)return 1;
	// 	return x*fib(x-1);
	// }
	// static int x; 
	/////function to check braces balancing
	// static List<String> function(String s[]){
	// 	List<String> ans=new ArrayList<String>();
	// 	int ind=0;
	// 	for(String i : s){
	// 		List<String> stack = new ArrayList<String> ();
	// 		int ptr=-1;
	// 		int sp=0;
	// 		boolean set=true;
	// 		while(sp<i.length()){
	// 			if (i.charAt(sp)=='}'){
	// 				if (ptr!=-1 && stack.get(ptr).equals("{")){
	// 					stack.remove(ptr--);
	// 					sp+=1;
	// 					continue;
	// 				}
	// 				ans.add("NO");
	// 				set=false;
	// 				break;
	// 			}
	// 			else if (i.charAt(sp)==')'){
	// 				if (ptr!=-1 && stack.get(ptr).equals("(")){
	// 					stack.remove(ptr--);
	// 					sp+=1;
	// 					continue;
	// 				}
	// 				ans.add("NO");
	// 				set=false;
	// 				break;
	// 			}
	// 			else if(i.charAt(sp)==']'){
	// 				if(ptr!=-1 && stack.get(ptr).equals("[")){
	// 					stack.remove(ptr--);
	// 					sp+=1;
	// 					continue;
	// 				}
	// 				ans.add("NO");
	// 				set=false;
	// 				break;
	// 			}
	// 			else{
	// 				stack.add(String.valueOf(i.charAt(sp++)));
	// 				ptr++;
	// 			}
	// 		} 
	// 		if(ptr!=-1 && set)
	// 				ans.add("NO");
	// 		else if(set && ptr==-1)
	// 				ans.add("YES");
	// 	}
	// 	return ans;
	// }

	public static <T> void print(T s){
		System.out.println(s);
	}
	// static int a[][];

	// public static int minDEL(String s1,int l1,String s2,int l2){
	// 	if(l1==0)return l2;
	// 	if(l2==0)return l1;

	// 	int ans;
	// 	if(s1.charAt(l1)==s2.charAt(l2))
	// 		ans=minDEL(s1,l1-1,s2,l2-1);
	// 	else{
	// 		ans=1+Math.min(minDEL(s1,l1-1,s2,l2),minDEL(s1,l1,s2,l2-1));
	// 	}
	// 	return ans;
	// }
	public static void main(String args[]){
		// String s[]={"{[()]}","{[}]","{{}[]","{}[]}","{}[]()"};
		// List<String> ans=function(s);
		// for(String x:ans)System.out.println(x);
		// String arr="";
		// System.out.print(arr.equals(""));

		Scanner sc=new Scanner(System.in);
		// // String s[]=sc.nextLine().trim().split(" ");

		// // Dictionary has = new Hashtable(); Dont use Dictionary it is obsolete now.
		// // for(int i=0;i<s.length;i++){
		// // 	if (has.get(s[i])==null){
		// // 		has.put(s[i],1);
		// // 		System.out.print(s[i]+" ");
		// // 	}
		// // }

		// int n=Integer.parseInt(sc.nextLine());
		// // int n=sc.nextInt();
		// String s=sc.nextLine();
		// System.out.println(n+" "+s);
		// String s1[]=new String[n];
		// String s1[]=s.split(" ");

		// int arr[]=new int[n];
		// int arr[]={1,3,52,2,0};
		// for (int i=0;i<n;i++)
		// 	arr[i]=Integer.parseInt(s1[i]);
		// Arrays.sort(arr,start(inc),end(exc));
		// Arrays.sort(arr,1,5);
		// for(int i:arr)System.out.print(i+" ");
		// System.out.println("lenght "+arr.length);

		// int x=Integer.MAX_VALUE;

		// System.out.print(Math.sqrt(67)+" "+Math.log(4.0)/Math.log(2));

		// // Integer.toString(number,base)(default base=10)
		// String s3=Integer.toString(5,3);
		// System.out.println(s3);
		// // Integer.parseInt(string,base)(default base=10)
		// int a=Integer.parseInt(s3);
		// int b=Integer.parseInt(s3,2);
		// System.out.println(a+" "+s3+" "+b);
		// String s4=String.valueOf(9);
		// System.out.println(String.format("%.2f %s sskjjs%dk ",123.45678,"h",7));
		// System.out.println(s3);

		// // 2d matrix in java
		// int a[][]=new int[2][2];
		// a[0][0]=1;
		// a[0][1]=2;
		// a[1][0]=3;
		// a[1][1]=4;
		// System.out.print(a[0][0]);
		// System.out.print(x);

		// Integer x=new Integer(5);
		// int y=Integer.parseInt(x.toString());
		// System.out.print(x+" "+y);

		///hashing in java 
		// Map<String,Integer> a=new HashMap();
		// a.put("hello",1);
		// a.put("world",2);
		// for(String s : a.keySet()){print(s+" "+a.get(s));}

		//Dictionary<Integer,Long> has= new Hashtable<Integer,Long>();  use map 
		// Dictionary has= new Hashtable();
		// has.put("hitesh",1);
		// has.put(1,2);

		// System.out.println(has.get("hitesh"));
		// if (has.get(3)==null)
		// 	System.out.println("NULL");
		// for (Enumeration i = has.elements(); i.hasMoreElements();) 
  //       { 
  //           System.out.println("Value in Dictionary : " + i.nextElement()); 
  //       } 
  //       for (Enumeration k = has.keys(); k.hasMoreElements();) 
  //       { 
  //           System.out.println("Keys in Dictionary : " + k.nextElement()); 
  //       } 

		///sets in java 
		// Set<Integer> un_orderedSet=new LinkedHashSet<Integer>();
		// Set<Integer> no_orderedSet=new HashSet<Integer>();
		// Set<Integer> orderedSet=new TreeSet<Integer>();
		// int n=sc.nextInt();
		// for(int i=0;i<n;i++){
		// 	Integer a=new Integer(sc.nextInt());
		// 	un_orderedSet.add(a);
		// 	orderedSet.add(a);
		// }
		// for(Integer x:un_orderedSet)
		// 		System.out.print(x+" ");
		// System.out.println();
		// for(Integer x:orderedSet)
		// 		System.out.print(x+" ");

		// int a=Integer.valueOf(new Integer(5));
		// char arr[]={'a','b'};
		// String s=String.valueOf(arr); 
		// print(s);

		///Lists in java 
		List<Integer> l=new ArrayList<Integer>();
		l.add(6);
		l.add(1,5);
		l.add(2);
		// l.set(0,5);
		print(l.get(1));
		// l.add(1,7);
		for(Integer i : l)System.out.print(i+" ");
		// for(int i=0;i<l.size();i++){
		// 	System.out.print(l.get(i)+" ");
		//string modifications.......... 
		// String s="172.0.254.1f";
		// s=s+".";
		// char arr[]=s.toCharArray();
		// String temp=new String("");
		// boolean check=true;
		// for (int i=0;i<arr.length;i++){
		// 	if (arr[i]!='.')temp=temp+arr[i];
		// 	else{
		// 		try{
		// 			if (Integer.parseInt(temp)>255 || Integer.parseInt(temp)<0){
		// 				check=false;
		// 				System.out.print("invalid ");
		// 				break;
		// 			}
		// 		}
		// 		catch(Exception e){
		// 			check=false;
		// 			System.out.print("invalid ");
		// 			break;
		// 		}
		// 		temp="";
		// 	}
		// 	// arr[i]=(char)((int)arr[i]+1);
		// } 
		// if (check)System.out.print("valid ");
		// s=String.valueOf(arr);
		// System.out.print(s);
		/////MINIMUM DELETIONS REQUIRED TO FORM PALINDROME 
		// String s=sc.next();
		// String s1=s.substring(0,(int)s.length()/2);
		// String s2s=s.substring((int)s.length()/2,s.length());
		// if (s.length()%2!=0)s1=s1+s2s.charAt(0);
		// StringBuffer s2b=new StringBuffer(s2s);
		// s2b.reverse();
		// String s2=s2b.toString();
		// print(s1);
		// print(s2);
		// a=new int[s1.length()][s1.length()];

		// print(minDEL(s1,s1.length()-1,s2,s2.length()-1));
		// TRAVERSIG MAP
		// Map<Integer,Integer> d=new HashMap<Integer,Integer> ();
		// d.put(1,100);
		// d.put(2,200);
		// d.put(3,300);

		// // // for(Map.Entry<Integer,Integer> p:d.entrySet() ){
		// // // 	print(Integer.toString(p.getKey())+" "+Integer.toString(p.getValue()));
		// // // }
		// for(Integer i:d.keySet()){
		// 	print(d.get(i));
		// }
	}
}